{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Input.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './input.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.value,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const Input = _ref => {\n  _s();\n\n  let {\n    name,\n    type = 'text',\n    value,\n    onChange,\n    placeholder,\n    className,\n    style,\n    label,\n    labelClass,\n    id,\n    element,\n    row = 3,\n    errorText\n  } = _ref;\n  let elementType;\n  const [inputState, dispatch] = React.useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      value: event.target.value\n    });\n    console.log('inputState', inputState);\n  };\n\n  if (element === 'input') {\n    elementType = /*#__PURE__*/_jsxDEV(\"input\", {\n      //  name={name} \n      type: type,\n      value: inputState.value,\n      onChange: changeHandler,\n      placeholder: placeholder //  className={className} \n      //  style={style} \n      ,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this);\n  } else if (element === 'textarea') {\n    elementType = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      //  name={name} \n      value: inputState.value,\n      onChange: changeHandler,\n      placeholder: placeholder //  className={className} \n      //  style={style} \n      ,\n      id: id,\n      rows: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this);\n  } else if (element === 'select') {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control \n    ${!inputState.isValid && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), elementType, inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"yjVxM68sVTGWJpboJ31HHD859b0=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Input.tsx"],"names":["React","inputReducer","state","action","type","value","isValid","Input","name","onChange","placeholder","className","style","label","labelClass","id","element","row","errorText","elementType","inputState","dispatch","useReducer","changeHandler","event","target","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,cAAP;;;AAiBA,MAAMC,YAAY,GAAC,CAACC,KAAD,EAAWC,MAAX,KAAwB;AACvC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAACF,MAAM,CAACE,KAFV;AAGHC,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKH;AACG,aAAOJ,KAAP;AARR;AAUH,CAXD;;AAYA,OAAO,MAAMK,KAA2B,GAAG,QAcrC;AAAA;;AAAA,MAdsC;AACxCC,IAAAA,IADwC;AAExCJ,IAAAA,IAAI,GAAG,MAFiC;AAGxCC,IAAAA,KAHwC;AAIxCI,IAAAA,QAJwC;AAKxCC,IAAAA,WALwC;AAMxCC,IAAAA,SANwC;AAOxCC,IAAAA,KAPwC;AAQxCC,IAAAA,KARwC;AASxCC,IAAAA,UATwC;AAUxCC,IAAAA,EAVwC;AAWxCC,IAAAA,OAXwC;AAYxCC,IAAAA,GAAG,GAAC,CAZoC;AAaxCC,IAAAA;AAbwC,GActC;AACF,MAAIC,WAAJ;AACD,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAuBrB,KAAK,CAACsB,UAAN,CAAiBrB,YAAjB,EAA8B;AAACI,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,OAAO,EAAC;AAAlB,GAA9B,CAA7B;;AACC,QAAMiB,aAAa,GAAIC,KAAD,IAAsF;AACxGH,IAAAA,QAAQ,CAAC;AACLjB,MAAAA,IAAI,EAAC,QADA;AAELC,MAAAA,KAAK,EAACmB,KAAK,CAACC,MAAN,CAAapB;AAFd,KAAD,CAAR;AAIAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBP,UAAzB;AACH,GAND;;AAOA,MAAGJ,OAAO,KAAK,OAAf,EAAuB;AACnBG,IAAAA,WAAW,gBAAG;AACM;AACC,MAAA,IAAI,EAAEf,IAFb;AAGO,MAAA,KAAK,EAAEgB,UAAU,CAACf,KAHzB;AAIO,MAAA,QAAQ,EAAEkB,aAJjB;AAKO,MAAA,WAAW,EAAEb,WALpB,CAMM;AACA;AAPN;AAQO,MAAA,EAAE,EAAEK;AARX;AAAA;AAAA;AAAA;AAAA,YAAd;AAUH,GAXD,MAWM,IAAGC,OAAO,KAAK,UAAf,EAA0B;AAC5BG,IAAAA,WAAW,gBAAG;AACM;AACA,MAAA,KAAK,EAAEC,UAAU,CAACf,KAFxB;AAGM,MAAA,QAAQ,EAAEkB,aAHhB;AAIO,MAAA,WAAW,EAAEb,WAJpB,CAKM;AACA;AANN;AAOO,MAAA,EAAE,EAAEK,EAPX;AAQO,MAAA,IAAI,EAAEE;AARb;AAAA;AAAA;AAAA;AAAA,YAAd;AAUH,GAXK,MAWA,IAAGD,OAAO,KAAK,QAAf,EAAwB,CAE7B;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAG;AACrB,MAAM,CAACI,UAAU,CAACd,OAAZ,IAAqB,uBAAwB,EAD/C;AAAA,4BAEI;AAAO,MAAA,OAAO,EAAES,EAAhB;AAAA,gBAAqBF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKM,WAHL,EAIKC,UAAU,CAACd,OAAX,iBAAoB;AAAA,gBAAIY;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1DM;;GAAMX,K;;KAAAA,K","sourcesContent":["import React from 'react'\nimport { actionCreators } from '../../../store';\n\nimport './input.scss'\n\ninterface InputProps {\n    name?: string;\n    type?: string;\n    value?: string;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement>) => void;\n    placeholder?: string;\n    className?: string;\n    style?: object;\n    label?: string;\n    labelClass?: string;\n    id?: string;\n    element?:'input'|'textarea'|'select'\n    row?:number;\n    errorText?:string\n}\nconst inputReducer=(state:any,action:any)=>{\n    switch(action.type){\n        case 'CHANGE':\n            return {\n                ...state,\n                value:action.value,\n                isValid:true\n            }\n         default:\n            return state   \n    }\n}\nexport const Input:React.FC <InputProps> = ({\n    name,\n    type = 'text',\n    value,\n    onChange,\n    placeholder,\n    className,\n    style,\n    label,\n    labelClass,\n    id,\n    element,\n    row=3,\n    errorText\n}) => {\n    let elementType;\n   const [inputState,dispatch] =React.useReducer(inputReducer,{value:'',isValid:false});\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement>) => {\n        dispatch({\n            type:'CHANGE',\n            value:event.target.value\n        })\n        console.log('inputState',inputState)\n    }\n    if(element === 'input'){\n        elementType = <input \n                            //  name={name} \n                             type={type} \n                             value={inputState.value} \n                             onChange={changeHandler} \n                             placeholder={placeholder} \n                            //  className={className} \n                            //  style={style} \n                             id={id} \n                             />\n    }else if(element === 'textarea'){\n        elementType = <textarea \n                            //  name={name} \n                            value={inputState.value} \n                            onChange={changeHandler} \n                             placeholder={placeholder} \n                            //  className={className} \n                            //  style={style} \n                             id={id} \n                             rows={row}\n                             />\n    }else if(element === 'select'){\n\n    }\n\n  return (\n    <div className={`form-control \n    ${!inputState.isValid&&'form-control--invalid'}`}>\n        <label htmlFor={id}>{label}</label>\n        {elementType}\n        {inputState.isValid&&<p>{errorText}</p>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}