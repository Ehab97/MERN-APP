{"ast":null,"code":"import { ActionType } from '../action-types';\nconst initialState = {\n  loading: false,\n  error: null,\n  data: []\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.SEARCH_REPOSITORIES:\n      return {\n        loading: true,\n        error: null,\n        data: []\n      };\n\n    case ActionType.SEARCH_REPOSITORIES_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n\n    case ActionType.SEARCH_REPOSITORIES_ERROR:\n      return {\n        loading: false,\n        error: action.payload,\n        data: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/reducers/repositoriesReducer.ts"],"names":["ActionType","initialState","loading","error","data","reducer","state","action","type","SEARCH_REPOSITORIES","SEARCH_REPOSITORIES_SUCCESS","payload","SEARCH_REPOSITORIES_ERROR"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AASA,MAAMC,YAAY,GAAC;AACjBC,EAAAA,OAAO,EAAC,KADS;AAEjBC,EAAAA,KAAK,EAAC,IAFW;AAGjBC,EAAAA,IAAI,EAAC;AAHY,CAAnB;;AAKA,MAAMC,OAAO,GAAG,YAGQ;AAAA,MAFtBC,KAEsB,uEAFGL,YAEH;AAAA,MADtBM,MACsB;;AACtB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,UAAU,CAACS,mBAAhB;AACE,aAAO;AAAEP,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,KAAK,EAAE,IAAxB;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAAP;;AACF,SAAKJ,UAAU,CAACU,2BAAhB;AACE,aAAO;AAAER,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAE,IAAzB;AAA+BC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAA5C,OAAP;;AACF,SAAKX,UAAU,CAACY,yBAAhB;AACE,aAAO;AAAEV,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAAhC;AAAyCP,QAAAA,IAAI,EAAE;AAA/C,OAAP;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface RepositoriesState {\n  loading: boolean;\n  error: string | null;\n  data: string[];\n}\n\nconst initialState={\n  loading:false,\n  error:null,\n  data:[]\n}\nconst reducer = (\n  state: RepositoriesState=initialState,\n  action: Action\n): RepositoriesState => {\n  switch (action.type) {\n    case ActionType.SEARCH_REPOSITORIES:\n      return { loading: true, error: null, data: [] };\n    case ActionType.SEARCH_REPOSITORIES_SUCCESS:\n      return { loading: false, error: null, data: action.payload };\n    case ActionType.SEARCH_REPOSITORIES_ERROR:\n      return { loading: false, error: action.payload, data: [] };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}