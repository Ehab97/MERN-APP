{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\nfunction addRootElement(rootElem) {\n  var _document, _document$body, _document$body$lastEl;\n\n  if ((_document = document) !== null && _document !== void 0 && (_document$body = _document.body) !== null && _document$body !== void 0 && (_document$body$lastEl = _document$body.lastElementChild) !== null && _document$body$lastEl !== void 0 && _document$body$lastEl.nextElementSibling && rootElem) {\n    var _document2, _document2$body, _document2$body$lastE;\n\n    document.body.insertBefore(rootElem, (_document2 = document) === null || _document2 === void 0 ? void 0 : (_document2$body = _document2.body) === null || _document2$body === void 0 ? void 0 : (_document2$body$lastE = _document2$body.lastElementChild) === null || _document2$body$lastE === void 0 ? void 0 : _document2$body$lastE.nextElementSibling);\n  }\n}\n\nexport function usePortals(id) {\n  _s();\n\n  const rootElemRef = React.useRef(null);\n  React.useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n    const existingParent = document.querySelector(`#${id}`); // Parent is either a new root or the existing dom element\n\n    const parentElem = existingParent || createRootElement(id); // If there is no existing DOM element, add a new one.\n\n    if (!existingParent) {\n      addRootElement(parentElem);\n    } // Add the detached element to the parent\n\n\n    if (condition) {\n      parentElem.appendChild(rootElemRef.current);\n    }\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n\n      if (!parentElem.childElementCount) {\n        parentElem.remove();\n      }\n    };\n  }, [id]);\n\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\n_s(usePortals, \"aHdAbTDrTa5a3NQL1rgGPfFVhlo=\");\n\nexport function usePortal(id) {\n  _s2();\n\n  const rootElemRef = React.useRef(document.createElement('div'));\n  React.useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n    const parentElem = document.querySelector(`#${id}`); // Add the detached element to the parent\n\n    parentElem === null || parentElem === void 0 ? void 0 : parentElem.appendChild(rootElemRef.current); // This function is run on unmount\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n    };\n  }, [id]);\n  return rootElemRef.current;\n}\n\n_s2(usePortal, \"aHdAbTDrTa5a3NQL1rgGPfFVhlo=\");","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/usePortal.tsx"],"names":["React","createRootElement","id","rootContainer","document","createElement","setAttribute","addRootElement","rootElem","body","lastElementChild","nextElementSibling","insertBefore","usePortals","rootElemRef","useRef","useEffect","setupElement","existingParent","querySelector","parentElem","condition","appendChild","current","removeElement","remove","childElementCount","getRootElem","usePortal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,iBAAT,CAA2BC,EAA3B,EAAsC;AAClC,QAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAF,EAAAA,aAAa,CAACG,YAAd,CAA2B,IAA3B,EAAiCJ,EAAjC;AACA,SAAOC,aAAP;AACH;;AACD,SAASI,cAAT,CAAwBC,QAAxB,EAA2D;AAAA;;AACxD,MAAG,aAAAJ,QAAQ,UAAR,wDAAUK,IAAV,mFAAgBC,gBAAhB,wEAAkCC,kBAAlC,IAAsDH,QAAzD,EAAkE;AAAA;;AACjEJ,IAAAA,QAAQ,CAACK,IAAT,CAAcG,YAAd,CACIJ,QADJ,gBAEIJ,QAFJ,kEAEI,WAAUK,IAFd,6EAEI,gBAAgBC,gBAFpB,0DAEI,sBAAkCC,kBAFtC;AAIC;AACF;;AACF,OAAO,SAASE,UAAT,CAAoBX,EAApB,EAA+B;AAAA;;AACnC,QAAMY,WAAW,GAAGd,KAAK,CAACe,MAAN,CAAa,IAAb,CAApB;AAEFf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,SAASC,YAAT,GAAwB;AACtC;AACA,UAAMC,cAAc,GAAGd,QAAQ,CAACe,aAAT,CAAwB,IAAGjB,EAAG,EAA9B,CAAvB,CAFsC,CAGtC;;AACA,UAAMkB,UAAU,GAAGF,cAAc,IAAIjB,iBAAiB,CAACC,EAAD,CAAtD,CAJsC,CAMtC;;AACA,QAAI,CAACgB,cAAL,EAAqB;AACnBX,MAAAA,cAAc,CAACa,UAAD,CAAd;AACD,KATqC,CAWtC;;;AACA,QAAIC,SAAJ,EAAe;AAEXD,MAAAA,UAAU,CAACE,WAAX,CAAuBR,WAAW,CAACS,OAAnC;AACH;;AAED,WAAO,SAASC,aAAT,GAAyB;AAC9BV,MAAAA,WAAW,CAACS,OAAZ,CAAoBE,MAApB;;AACA,UAAI,CAACL,UAAU,CAACM,iBAAhB,EAAmC;AACjCN,QAAAA,UAAU,CAACK,MAAX;AACD;AACF,KALD;AAMD,GAvBD,EAuBG,CAACvB,EAAD,CAvBH;;AAyBA,WAASyB,WAAT,GAAuB;AACrB,QAAI,CAACb,WAAW,CAACS,OAAjB,EAA0B;AACxBT,MAAAA,WAAW,CAACS,OAAZ,GAAsBnB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACD;;AACD,WAAOS,WAAW,CAACS,OAAnB;AACD;;AAED,SAAOI,WAAW,EAAlB;AACD;;GApCgBd,U;;AAqCjB,OAAO,SAASe,SAAT,CAAmB1B,EAAnB,EAA8B;AAAA;;AACjC,QAAMY,WAAW,GAAGd,KAAK,CAACe,MAAN,CAAaX,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb,CAApB;AAEAL,EAAAA,KAAK,CAACgB,SAAN,CAAgB,SAASC,YAAT,GAAwB;AACtC;AACA,UAAMG,UAAU,GAAGhB,QAAQ,CAACe,aAAT,CAAwB,IAAGjB,EAAG,EAA9B,CAAnB,CAFsC,CAGtC;;AACAkB,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEE,WAAZ,CAAwBR,WAAW,CAACS,OAApC,EAJsC,CAKtC;;AACA,WAAO,SAASC,aAAT,GAAyB;AAC9BV,MAAAA,WAAW,CAACS,OAAZ,CAAoBE,MAApB;AACD,KAFD;AAGD,GATD,EASG,CAACvB,EAAD,CATH;AAWA,SAAOY,WAAW,CAACS,OAAnB;AACD;;IAfaK,S","sourcesContent":["import React from \"react\";\n\n\nfunction createRootElement(id:string) {\n    const rootContainer = document.createElement('div');\n    rootContainer.setAttribute('id', id);\n    return rootContainer;\n}\nfunction addRootElement(rootElem:Element|HTMLElement|null) {\n   if(document?.body?.lastElementChild?.nextElementSibling&&rootElem){\n    document.body.insertBefore(\n        rootElem,\n        document?.body?.lastElementChild?.nextElementSibling\n      )\n    }\n  }\n export function usePortals(id:string) {\n    const rootElemRef = React.useRef(null);\n\n  React.useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n    const existingParent = document.querySelector(`#${id}`);\n    // Parent is either a new root or the existing dom element\n    const parentElem = existingParent || createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    if (!existingParent) {\n      addRootElement(parentElem);\n    }\n\n    // Add the detached element to the parent\n    if (condition) {\n        \n        parentElem.appendChild(rootElemRef.current);\n    }\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n      if (!parentElem.childElementCount) {\n        parentElem.remove();\n      }\n    };\n  }, [id]);\n\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\nexport function usePortal(id:string) {\n    const rootElemRef = React.useRef(document.createElement('div'));\n  \n    React.useEffect(function setupElement() {\n      // Look for existing target dom element to append to\n      const parentElem = document.querySelector(`#${id}`);\n      // Add the detached element to the parent\n      parentElem?.appendChild(rootElemRef.current);\n      // This function is run on unmount\n      return function removeElement() {\n        rootElemRef.current.remove();\n      };\n    }, [id]);\n  \n    return rootElemRef.current;\n  }"]},"metadata":{},"sourceType":"module"}