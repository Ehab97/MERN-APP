{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/routes/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport UserView from '../pages/Users';\nimport Places from '../pages/Places';\nimport UserPlacesView from '../pages/UserPlacesView';\nimport UpdatePlaceView from '../pages/UpdatePlaceView';\nimport { AuthView } from '../pages/AuthView';\nimport { AuthContext } from '../components/shared/context/auth.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routing = () => {\n  _s();\n\n  const auth = React.useContext(AuthContext);\n  const {\n    isLoggedIn\n  } = auth;\n\n  const isAuthed = () => /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UserView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:userId/places\",\n      element: /*#__PURE__*/_jsxDEV(UserPlacesView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/places/new\",\n      element: /*#__PURE__*/_jsxDEV(Places, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/places/:placeId/\",\n      element: /*#__PURE__*/_jsxDEV(UpdatePlaceView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth/\",\n      element: /*#__PURE__*/_jsxDEV(AuthView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  const notAuthed = () => /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UserView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth/\",\n      element: /*#__PURE__*/_jsxDEV(AuthView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  return {};\n};\n\n_s(Routing, \"2E+KaGHVlJMhtGjyKmHdHkA1EKU=\");\n\n_c = Routing;\nexport default Routing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/routes/index.tsx"],"names":["React","Route","Routes","UserView","Places","UserPlacesView","UpdatePlaceView","AuthView","AuthContext","Routing","auth","useContext","isLoggedIn","isAuthed","notAuthed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,2CAA5B;;;AASA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,IAAI,GAACV,KAAK,CAACW,UAAN,CAAiBH,WAAjB,CAAX;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaF,IAAnB;;AACA,QAAMG,QAAQ,GAAC,mBACb,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mBAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,QAAMC,SAAS,GAAC,mBACd,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,SACC,EADD;AAGD,CArBD;;GAAML,O;;KAAAA,O;AAsBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { Route, Routes} from 'react-router-dom';\nimport UserView from '../pages/Users';\nimport Places from '../pages/Places';\n\nimport UserPlacesView from '../pages/UserPlacesView';\n\nimport UpdatePlaceView from '../pages/UpdatePlaceView';\nimport { AuthView } from '../pages/AuthView';\nimport { AuthContext } from '../components/shared/context/auth.context';\n\n\n\ninterface RouteType {\n  path: string;\n  component: React.ComponentType;\n}\n\nconst Routing: React.FC = () => {\n  const auth=React.useContext(AuthContext);\n  const {isLoggedIn}=auth;\n  const isAuthed=()=>(\n    <Routes>\n      <Route path=\"/\"                   element={<UserView />} />\n      <Route path=\"/:userId/places\"     element={<UserPlacesView/>} />\n      <Route path=\"/places/new\"         element={<Places />} />\n      <Route path=\"/places/:placeId/\"   element={<UpdatePlaceView />} />\n      <Route path=\"/auth/\"              element={<AuthView />} />\n    </Routes>\n  )\n  const notAuthed=()=>(\n    <Routes>\n      <Route path=\"/\"                   element={<UserView />} />\n      <Route path=\"/auth/\"              element={<AuthView />} />\n    </Routes>\n  )\n  return(\n   {}\n  )\n}\nexport default Routing;"]},"metadata":{},"sourceType":"module"}