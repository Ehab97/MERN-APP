{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/NewPlace.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Input } from \"../shared/UIElements/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../utlis/validations/validator';\nimport Button from \"../shared/UIElements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const NewPlace = () => {\n  _s();\n\n  const [formState, dispatch] = React.useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = React.useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log('formState', formState); //send this to back end\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Title\",\n      element: \"input\",\n      id: \"title\",\n      onInput: inputHandler,\n      errorText: `please enter valid text`,\n      validators: [VALIDATOR_REQUIRE()]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Description\",\n      element: \"textarea\",\n      id: \"description\",\n      onInput: inputHandler,\n      errorText: `please enter at least five characters text`,\n      validators: [VALIDATOR_MINLENGTH(5)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Address\",\n      element: \"input\",\n      id: \"address\",\n      onInput: inputHandler,\n      errorText: `please enter at least five characters text`,\n      validators: [VALIDATOR_MINLENGTH(5)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPlace, \"u3aG+mKM4huSB9+DOIrPhigSrfA=\");\n\n_c = NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/NewPlace.tsx"],"names":["React","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","useReducer","title","description","inputHandler","useCallback","id","placeSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Input } from \"../shared/UIElements/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../utlis/validations/validator';\nimport Button from \"../shared/UIElements/Button\";\n\n\nconst formReducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"INPUT_CHANGE\":\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n              if (inputId === action.inputId) {\n                formIsValid = formIsValid && action.isValid;\n              } else {\n                formIsValid = formIsValid && state.inputs[inputId].isValid;\n              }\n            }\n            return {\n              ...state,\n              inputs: {\n                ...state.inputs,\n                [action.inputId]: { value: action.value, isValid: action.isValid }\n              },\n              isValid: formIsValid\n            };\n  \n      default:\n        return state;\n    }\n  };\n\nexport const NewPlace: React.FC = () => {\n    const [formState,dispatch ]=React.useReducer(formReducer,{\n        inputs: {\n            title: {\n              value: '',\n              isValid: false\n            },\n            description: {\n              value: '',\n              isValid: false\n            }\n          },\n          isValid: false\n    })\n    const inputHandler = React.useCallback((id, value, isValid) => {\n        dispatch({\n          type: 'INPUT_CHANGE',\n          value: value,\n          isValid: isValid,\n          inputId: id\n        });\n      }, []);\n \n       const placeSubmitHandler=(event: React.FormEvent<HTMLFormElement>)=>{\n            event.preventDefault();\n            console.log('formState',formState)//send this to back end\n        }\n    return (\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n            <Input \n             label=\"Title\" \n             element=\"input\"\n             id=\"title\"\n             onInput={inputHandler}\n             errorText={`please enter valid text`}\n             validators={[VALIDATOR_REQUIRE()]}\n            />\n            <Input \n             label=\"Description\" \n             element=\"textarea\"\n             id=\"description\"\n             onInput={inputHandler}\n             errorText={`please enter at least five characters text`}\n             validators={[VALIDATOR_MINLENGTH(5)]}\n            />\n            <Input \n             label=\"Address\" \n             element=\"input\"\n             id=\"address\"\n             onInput={inputHandler}\n             errorText={`please enter at least five characters text`}\n             validators={[VALIDATOR_MINLENGTH(5)]}\n            />\n           <Button type=\"submit\" disabled={!formState.isValid}>\n                ADD PLACE\n            </Button>\n        </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}