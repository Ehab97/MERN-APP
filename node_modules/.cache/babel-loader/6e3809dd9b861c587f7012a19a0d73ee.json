{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/SideDrawerNavigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../../styles/header.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerHook = document.getElementById(\"drawer-hook\");\nexport const SideDrawerNavigation = _ref => {\n  _s();\n\n  let {\n    children,\n    className\n  } = _ref;\n  const [container] = React.useState(drawerHook);\n  if (className) container.classList.add(className);\n  const [domReady, setDomReady] = React.useState(false);\n  React.useEffect(() => {\n    document.body.appendChild(container);\n    return () => {\n      document.body.removeChild(container);\n    };\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"side-drawer\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 19\n  }, this);\n\n  return domReady ? /*#__PURE__*/ReactDOM.createPortal(content, drawerHook) : null;\n};\n\n_s(SideDrawerNavigation, \"smhtMIVN+OJ0Oy++mglIX66rcRI=\");\n\n_c = SideDrawerNavigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideDrawerNavigation\");","map":{"version":3,"sources":["/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/SideDrawerNavigation.tsx"],"names":["React","ReactDOM","drawerHook","document","getElementById","SideDrawerNavigation","children","className","container","useState","classList","add","domReady","setDomReady","useEffect","body","appendChild","removeChild","content","createPortal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAQC,QAAR,MAAuB,WAAvB;AACA,OAAQ,6BAAR;;AAQE,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACA,OAAO,MAAMC,oBAA2C,GAAG,QAEjC;AAAA;;AAAA,MAFkC;AAC1DC,IAAAA,QAD0D;AACjDC,IAAAA;AADiD,GAElC;AACxB,QAAM,CAACC,SAAD,IAAcR,KAAK,CAACS,QAAN,CAAeP,UAAf,CAApB;AACA,MAAKK,SAAL,EACIC,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwBJ,SAAxB;AACJ,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACS,QAAN,CAAe,KAAf,CAAhC;AAEAT,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClBX,IAAAA,QAAQ,CAACY,IAAT,CAAcC,WAAd,CAA0BR,SAA1B;AACA,WAAO,MAAM;AACTL,MAAAA,QAAQ,CAACY,IAAT,CAAcE,WAAd,CAA0BT,SAA1B;AACH,KAFD;AAGH,GALD,EAKG,EALH;;AAMA,MAAIU,OAAO,gBAAG;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA,cAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,SAAOM,QAAQ,gBAAEX,QAAQ,CAACkB,YAAT,CAAsBD,OAAtB,EAA+BhB,UAA/B,CAAF,GAA6C,IAA5D;AACD,CAhBM;;GAAMG,oB;;KAAAA,oB","sourcesContent":["import React from 'react'\n\nimport  ReactDOM  from 'react-dom';\nimport  '../../../styles/header.scss';\n\ninterface DrawerProps{\n    children?: React.ReactNode;\n    className? : string\n    el? : string\n}\n\n  const drawerHook = document.getElementById(\"drawer-hook\") as HTMLDivElement;\n  export const SideDrawerNavigation: React.FC<DrawerProps> = ({\n    children,className\n  }): JSX.Element | null => {\n    const [container] = React.useState(drawerHook)\n    if ( className )\n        container.classList.add(className)\n    const [domReady, setDomReady] = React.useState(false)\n\n    React.useEffect(() => {\n        document.body.appendChild(container)\n        return () => {\n            document.body.removeChild(container)\n        }\n    }, [])\n    let content = <aside className=\"side-drawer\">{children}</aside>;\n    return domReady? ReactDOM.createPortal(content, drawerHook):null;\n  };\n  "]},"metadata":{},"sourceType":"module"}