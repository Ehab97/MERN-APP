[{"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/index.tsx":"1","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/App.tsx":"2","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/index.ts":"3","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/store.ts":"4","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/reducers/index.ts":"5","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/action-creator/index.ts":"6","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/About.tsx":"7","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Home.tsx":"8","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Search.tsx":"9","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/reducers/repositoriesReducer.ts":"10","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/api/index.ts":"11","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/RespositriesList.tsx":"12","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Layout.tsx":"13","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/action-types/index.ts":"14","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/helpers/hooks/useTypeSelector.ts":"15","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/helpers/hooks/useAction.ts":"16","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Footer.tsx":"17","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/routes/index.tsx":"18","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Users.tsx":"19","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/Users.tsx":"20","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Places.tsx":"21","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/NewPlace.tsx":"22","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/UsersList.tsx":"23","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/UserItem.tsx":"24","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/userInterfaces.ts":"25","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Avatar.tsx":"26","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Card.tsx":"27","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/Header.tsx":"28","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/MainNavigation.tsx":"29","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/NavLinkItem.tsx":"30","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/SideDrawerNavigation.tsx":"31","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Backdrop.tsx":"32","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/UserPlaces.tsx":"33","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/PlaceList.tsx":"34","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/PlaceItem.tsx":"35","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/UserPlacesView.tsx":"36","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Button.tsx":"37","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Modal.tsx":"38","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/usePortal.tsx":"39","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/map/Map.tsx":"40","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Input.tsx":"41","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/validations/validator.ts":"42","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/UpdatePlaceView.tsx":"43","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/UpdatePlace.tsx":"44","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useForm.tsx":"45","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/AuthView.tsx":"46","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/Auth.tsx":"47","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/context/auth.context.ts":"48","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/LoadingSpinner.tsx":"49","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/ErrorModal.tsx":"50","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useHttpClient.tsx":"51","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/form/ImageUpload.tsx":"52","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useAuth.tsx":"53"},{"size":669,"mtime":1639671847148,"results":"54","hashOfConfig":"55"},{"size":685,"mtime":1669498117249,"results":"56","hashOfConfig":"55"},{"size":125,"mtime":1639594731156,"results":"57","hashOfConfig":"55"},{"size":290,"mtime":1639594672252,"results":"58","hashOfConfig":"55"},{"size":223,"mtime":1639593881104,"results":"59","hashOfConfig":"55"},{"size":867,"mtime":1639679506322,"results":"60","hashOfConfig":"55"},{"size":448,"mtime":1639665413056,"results":"61","hashOfConfig":"55"},{"size":223,"mtime":1639665458982,"results":"62","hashOfConfig":"55"},{"size":249,"mtime":1639665493163,"results":"63","hashOfConfig":"55"},{"size":761,"mtime":1639580256619,"results":"64","hashOfConfig":"55"},{"size":143,"mtime":1668354735162,"results":"65","hashOfConfig":"55"},{"size":1132,"mtime":1639678234020,"results":"66","hashOfConfig":"55"},{"size":287,"mtime":1660752744289,"results":"67","hashOfConfig":"55"},{"size":196,"mtime":1610051932000,"results":"68","hashOfConfig":"55"},{"size":182,"mtime":1639664616391,"results":"69","hashOfConfig":"55"},{"size":258,"mtime":1639664607208,"results":"70","hashOfConfig":"55"},{"size":218,"mtime":1639678317937,"results":"71","hashOfConfig":"55"},{"size":1360,"mtime":1669231371231,"results":"72","hashOfConfig":"55"},{"size":258,"mtime":1660670842825,"results":"73","hashOfConfig":"55"},{"size":1107,"mtime":1668726608598,"results":"74","hashOfConfig":"55"},{"size":265,"mtime":1660670962978,"results":"75","hashOfConfig":"55"},{"size":3480,"mtime":1669236161356,"results":"76","hashOfConfig":"55"},{"size":806,"mtime":1668878955567,"results":"77","hashOfConfig":"55"},{"size":1117,"mtime":1669148710097,"results":"78","hashOfConfig":"55"},{"size":101,"mtime":1660681597930,"results":"79","hashOfConfig":"55"},{"size":432,"mtime":1668717179899,"results":"80","hashOfConfig":"55"},{"size":329,"mtime":1660684810207,"results":"81","hashOfConfig":"55"},{"size":608,"mtime":1660756672280,"results":"82","hashOfConfig":"55"},{"size":1342,"mtime":1660813224844,"results":"83","hashOfConfig":"55"},{"size":1350,"mtime":1669484076132,"results":"84","hashOfConfig":"55"},{"size":1178,"mtime":1661008243950,"results":"85","hashOfConfig":"55"},{"size":599,"mtime":1660771665728,"results":"86","hashOfConfig":"55"},{"size":1749,"mtime":1669396624153,"results":"87","hashOfConfig":"55"},{"size":1263,"mtime":1669152545995,"results":"88","hashOfConfig":"55"},{"size":3859,"mtime":1669235059532,"results":"89","hashOfConfig":"55"},{"size":284,"mtime":1660829450175,"results":"90","hashOfConfig":"55"},{"size":1359,"mtime":1668978492408,"results":"91","hashOfConfig":"55"},{"size":2025,"mtime":1661008307806,"results":"92","hashOfConfig":"55"},{"size":2151,"mtime":1660852547523,"results":"93","hashOfConfig":"55"},{"size":1714,"mtime":1668888376856,"results":"94","hashOfConfig":"55"},{"size":2951,"mtime":1668980650711,"results":"95","hashOfConfig":"55"},{"size":1746,"mtime":1661015453042,"results":"96","hashOfConfig":"55"},{"size":275,"mtime":1661103731363,"results":"97","hashOfConfig":"55"},{"size":5203,"mtime":1669498423356,"results":"98","hashOfConfig":"55"},{"size":1587,"mtime":1668981550540,"results":"99","hashOfConfig":"55"},{"size":216,"mtime":1661366844479,"results":"100","hashOfConfig":"55"},{"size":5325,"mtime":1669483987985,"results":"101","hashOfConfig":"55"},{"size":331,"mtime":1669483987989,"results":"102","hashOfConfig":"55"},{"size":334,"mtime":1668448547655,"results":"103","hashOfConfig":"55"},{"size":518,"mtime":1668368239453,"results":"104","hashOfConfig":"55"},{"size":1436,"mtime":1668726818420,"results":"105","hashOfConfig":"55"},{"size":2141,"mtime":1668982593622,"results":"106","hashOfConfig":"55"},{"size":2562,"mtime":1669498149501,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"up6pog",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/index.tsx",[],["231","232"],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/App.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/index.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/store.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/reducers/index.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/action-creator/index.ts",["233"],"import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport client from '../../utlis/api/index';\n\nexport const searchRepositories = (term: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES,\n    });\n\n    try {\n      const { data } = await client.get(\n        'search',\n        {\n          params: {\n            text: term,\n          },\n        }\n      );\n\n      const names = data.objects.map((result: any) => {\n        return result.package.name;\n      });\n\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_SUCCESS,\n        payload: names,\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/About.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Home.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Search.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/reducers/repositoriesReducer.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/api/index.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/RespositriesList.tsx",["234"],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Layout.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/store/action-types/index.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/helpers/hooks/useTypeSelector.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/helpers/hooks/useAction.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Footer.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/routes/index.tsx",["235","236","237"],"import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport UserView from \"../pages/Users\";\nimport Places from \"../pages/Places\";\n\nimport UserPlacesView from \"../pages/UserPlacesView\";\n\nimport UpdatePlaceView from \"../pages/UpdatePlaceView\";\nimport { AuthView } from \"../pages/AuthView\";\nimport { AuthContext } from \"../components/shared/context/auth.context\";\n\ninterface RouteType {\n  path: string;\n  component: React.ComponentType;\n}\n\nconst Routing: React.FC = () => {\n  const auth = React.useContext(AuthContext);\n  let routes: any = [];\n  const { isLoggedIn, token } = auth;\n  const isAuthed = () => (\n    <Routes>\n      <Route path=\"/\" element={<UserView />} />\n      <Route path=\"/:userId/places\" element={<UserPlacesView />} />\n      <Route path=\"/places/new\" element={<Places />} />\n      <Route path=\"/places/:placeId/\" element={<UpdatePlaceView />} />\n      <Route path=\"/auth/\" element={<AuthView />} />\n      <Route path=\"*\" element={<UserView />} />\n    </Routes>\n  );\n  const notAuthed = () => (\n    <Routes>\n      <Route path=\"/\" element={<UserView />} />\n      <Route path=\"/:userId/places\" element={<UserPlacesView />} />\n      <Route path=\"/auth/\" element={<AuthView />} />\n      <Route path=\"*\" element={<AuthView />} />\n    </Routes>\n  );\n  return <>{token ? isAuthed() : notAuthed()}</>;\n};\nexport default Routing;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Users.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/Users.tsx",["238"],"import React, { useEffect, useState } from \"react\";\nimport { UsersList } from \"./UsersList\";\nimport { User } from \"./userInterfaces\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\n\nimport \"../../styles/users-list.scss\";\n\nexport const Users: React.FC = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [users, setUsers] = useState<User[]>([]);\n  React.useEffect(() => {\n    (async () => {\n      try {\n        let res: any = await sendRequest(\"http://localhost:5000/api/users\");\n\n        console.log(res);\n\n        let userData = res.data.users as User[];\n        setUsers(userData);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [sendRequest]);\n\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      <div>\n        {isLoading && <LoadingSpinner asOverlay={true} />}\n        <UsersList users={users} />\n      </div>\n    </>\n  );\n};\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/Places.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/NewPlace.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/UsersList.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/UserItem.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/userInterfaces.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Avatar.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Card.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/Header.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/MainNavigation.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/NavLinkItem.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/layouts/Navigation/SideDrawerNavigation.tsx",["239"],"import React from 'react'\nimport * as ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group'\n\nimport  '../../../styles/header.scss';\n\ninterface DrawerProps{\n    children?: React.ReactNode;\n    className? : string\n    el? : string\n    show : boolean\n    onClick? : ()=>void\n}\n  export const SideDrawerNavigation: React.FC<DrawerProps> = ({\n    children,\n    className='drawer-nav',\n    el = 'div',\n    show,\n    onClick\n  }): JSX.Element => {\n    \n    const [container] = React.useState(document.createElement(el))\n    container.setAttribute('id', 'drawer-hook')\n    React.useEffect(() => {\n      if ( className ) container.classList.add(className)\n        document.body.appendChild(container)\n        return () => {\n            document.body.removeChild(container)\n        }\n    }, [])\n    let content = (\n        <CSSTransition \n                in={show}\n                timeout={200}\n                classNames=\"my-node\"\n                mountOnEnter\n                unmountOnExit>\n          <aside className=\"side-drawer\" onClick={onClick}>{children}</aside>\n        </CSSTransition>\n    );\n    return ReactDOM.createPortal(content, container)\n  };\n  ","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Backdrop.tsx",["240"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\ninterface Props{\n  onClick:()=>void;\n}\n\nconst Backdrop:React.FC <Props> = ({onClick}) => {\n  const [container] = React.useState(document.createElement('div'));\n  container.setAttribute('id', 'backdrop-hook')\n  \n  React.useEffect(() => {\n      document.body.appendChild(container)\n      return () => {\n          document.body.removeChild(container)\n      }\n  }, [])\n  const Button=<div className=\"backdrop\" onClick={onClick}></div>;\n  return ReactDOM.createPortal(Button,container);\n};\n\nexport default Backdrop;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/UserPlaces.tsx",["241"],"import React, { useContext } from \"react\";\nimport PlaceList from \"./PlaceList\";\nimport { Place } from \"./placesInterFace\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\nimport \"../../styles/places.scss\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\nimport { AuthContext } from \"../shared/context/auth.context\";\n// interface Places{\n//     places:Place[];\n// }\n\nconst UserPlaces: React.FC = () => {\n  let { userId } = useParams();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [places, setPlaces] = React.useState<Place[]>([]);\n  const auth = useContext(AuthContext);\n  React.useEffect(() => {\n    (async () => {\n      try {\n        let res: any = await sendRequest(\n          `http://localhost:5000/api/places/user/${userId}`,\n          \"GET\",\n          null,\n          {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${auth.token}`,\n          }\n        );\n        setPlaces(res.data.places);\n        console.log(res);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [sendRequest, userId]);\n  const onDeletePlaceHandler = (deletedID?: string) => {\n    setPlaces((prevPlace) =>\n      prevPlace.filter((place) => place._id !== deletedID)\n    );\n  };\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      {isLoading && <LoadingSpinner asOverlay={true} />}\n      {places && (\n        <PlaceList places={places} onDeletePlace={onDeletePlaceHandler} />\n      )}\n    </>\n  );\n};\n\nexport default UserPlaces;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/PlaceList.tsx",["242"],"import React from \"react\";\nimport Card from \"../shared/UIElements/Card\";\nimport { NavLink } from \"react-router-dom\";\nimport PlaceItem from \"./PlaceItem\";\nimport { Place } from \"./placesInterFace\";\n\nimport \"../../styles/places.scss\";\nimport Button from \"../shared/UIElements/Button\";\n\ninterface PlaceItemProps {\n  places: Place[];\n  onDeletePlace: (deleteID?: string) => void;\n}\n\nconst PlaceList: React.FC<PlaceItemProps> = ({ places, onDeletePlace }) => {\n  if (places.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card className=\"w-100 h-48 d-flex justify-center items-center\">\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"place-list\">\n      {React.Children.toArray(\n        places.map((place: Place) => (\n          <PlaceItem\n            id={place._id}\n            image={place.image}\n            title={place.title}\n            description={place.description}\n            address={place.address}\n            creator={place.creator}\n            coordinates={place.coordinates}\n            onDelete={onDeletePlace}\n          />\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/PlaceItem.tsx",["243"],"import React, { useContext } from \"react\";\nimport Card from \"../shared/UIElements/Card\";\nimport { Place } from \"./placesInterFace\";\nimport Button from \"../shared/UIElements/Button\";\nimport Modal from \"../shared/UIElements/Modal\";\nimport { Map } from \"../shared/map/Map\";\nimport \"../../styles/places.scss\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../shared/context/auth.context\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\n\ninterface PlaceItemProps extends Place {\n  onDelete: (deletedID?: string) => void;\n}\n\nconst PlaceItem: React.FC<PlaceItemProps> = ({\n  id,\n  image,\n  title,\n  description,\n  address,\n  creator,\n  coordinates,\n  onDelete,\n}) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const navigate = useNavigate();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = React.useState(false);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n  const openConfirmHandler = () => setShowConfirm(true);\n  const closeConfirmHandler = () => setShowConfirm(false);\n  const confirmDeleteHandler = async () => {\n    console.log(\"Deleting...\");\n    await deletePlace();\n    closeConfirmHandler();\n  };\n  const dataMapProps: any = {\n    show: showMap,\n    onCancel: closeMapHandler,\n    header: address,\n    contentClass: \"place-item__modal-content\",\n    footerClass: \"place-item__modal-actions\",\n    footer: <Button onClick={closeMapHandler}>CLOSE</Button>,\n  };\n  const dataDeleteProps: any = {\n    show: showConfirm,\n    onCancel: closeConfirmHandler,\n    header: \"Are you sure\",\n    contentClass: \"place-item__modal-content\",\n    footerClass: \"place-item__modal-actions\",\n    footer: (\n      <>\n        <Button onClick={closeConfirmHandler} inverse>\n          CANCEL\n        </Button>\n        <Button danger onClick={confirmDeleteHandler}>\n          DELETE\n        </Button>\n      </>\n    ),\n  };\n  const deletePlace = async () => {\n    try {\n      let res: any = await sendRequest(\n        `http://localhost:5000/api/places/${id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      console.log(res);\n      onDelete(id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  console.log(auth.userId, id, creator);\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      <Modal {...dataMapProps}>\n        <div className=\"map-container\">\n          <Map coordinates={coordinates} />\n        </div>\n      </Modal>\n      <Modal {...dataDeleteProps}>\n        <p>do you want to delete this place?</p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay={true} />}\n          <div className=\"place-item__image\">\n            <img src={`http://localhost:5000/${image}`} alt={title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{title}</h2>\n            <h3>{address}</h3>\n            <p>{description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse={true} onClick={openMapHandler}>\n              view on map\n            </Button>\n            {auth.userId === creator && (\n              <Button to={`/places/${id}`}> EDIT </Button>\n            )}\n            {auth.userId === creator && (\n              <Button danger={true} onClick={openConfirmHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/UserPlacesView.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Button.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Modal.tsx",["244","245"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from  './Backdrop'\nimport './Modal.css';\nimport { usePortal } from '../../../app/hooks/usePortal';\n\ninterface OverLayProps{\n  className?:string;\n  headerClass?:string;\n  style?: object;\n  header?:string;\n  footer?:string;\n  onSubmit?:()=>void;\n  contentClass?:string;\n  footerClass?:string;\n  children?:React.ReactNode;\n  el?:string\n}\n\n\n\nconst ModalOverlay:React.FC <OverLayProps> = ({\n  className,\n  headerClass,\n  style,\n  header,\n  footer,\n  onSubmit,\n  contentClass,\n  footerClass,\n  children,\n  el='div'\n}) => {\n\n  // const target=usePortal('modal-hook');\n  const [container] = React.useState(document.createElement(el))\n  container.setAttribute('id', 'drawer-hook')\n  React.useEffect(() => {\n    if ( className ) container.classList.add(className)\n      document.body.appendChild(container)\n      return () => {\n          document.body.removeChild(container)\n      }\n  }, [])\n  const content = (\n    <div className={`modal ${className}`} style={style}>\n      <header className={`modal__header ${headerClass}`}>\n        <h2>{header}</h2>\n      </header>\n      <form\n        onSubmit={\n          onSubmit ? onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${contentClass}`}>\n          {children}\n        </div>\n        <footer className={`modal__footer ${footerClass}`}>\n          {footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, container);\n  // return ReactDOM.createPortal(content, target);\n};\n\nconst Modal:React.FC = (props:any) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/usePortal.tsx",["246","247","248"],"import React from \"react\";\n\n\nfunction createRootElement(id:string) {\n    const rootContainer = document.createElement('div');\n    rootContainer.setAttribute('id', id);\n    return rootContainer;\n}\nfunction addRootElement(rootElem:Element|HTMLDivElement|null) {\n   if(document?.body?.lastElementChild?.nextElementSibling&&rootElem){\n    document.body.insertBefore(\n        rootElem,\n        document?.body?.lastElementChild?.nextElementSibling\n      )\n    }\n  }\n//  export function usePortals(id:string) {\n//     const rootElemRef:React.MutableRefObject= React.useRef(null);\n\n//   React.useEffect(function setupElement() {\n//     // Look for existing target dom element to append to\n//     const existingParent = document.querySelector(`#${id}`);\n//     // Parent is either a new root or the existing dom element\n//     const parentElem = existingParent || createRootElement(id);\n\n//     // If there is no existing DOM element, add a new one.\n//     if (!existingParent) {\n//       addRootElement(parentElem);\n//     }\n\n//     // Add the detached element to the parent\n//     if (rootElemRef.current) {\n//         parentElem.appendChild(rootElemRef.current);\n//     }\n\n//     return function removeElement() {\n//         rootElemRef.current&&rootElemRef.current.remove();\n//       if (!parentElem.childElementCount) {\n//         parentElem.remove();\n//       }\n//     };\n//   }, [id]);\n\n//   function getRootElem() {\n//     if (!rootElemRef.current) {\n//       rootElemRef.current = document.createElement('div');\n//     }\n//     return rootElemRef.current;\n//   }\n\n//   return getRootElem();\n// }\nexport function usePortal(id:string) {\n    const rootElemRef = React.useRef(document.createElement('div'));\n  \n    React.useEffect(function setupElement() {\n      // Look for existing target dom element to append to\n      const parentElem = document.querySelector(`#${id}`);\n      // Add the detached element to the parent\n      parentElem?.appendChild(rootElemRef.current);\n      // This function is run on unmount\n      return function removeElement() {\n        rootElemRef.current.remove();\n      };\n    }, [id]);\n  \n    return rootElemRef.current;\n  }",["249","250"],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/map/Map.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/Input.tsx",["251"],"import React from \"react\";\nimport { actionCreators } from \"../../../store\";\nimport { validate } from \"../../../utlis/validations/validator\";\n\nimport \"./input.scss\";\n\ninterface InputProps {\n  name?: string;\n  type?: string;\n  inputValue?: string;\n  onInput?: (x: any, y: any, z: any) => void;\n  onChange?: (x: any) => void;\n  placeholder?: string;\n  className?: string;\n  style?: object;\n  label?: string;\n  labelClass?: string;\n  id?: string;\n  element?: \"input\" | \"textarea\" | \"select\";\n  row?: number;\n  errorText?: string;\n  validators?: any[];\n  valid?: boolean;\n  inputValid?: boolean;\n}\nconst inputReducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.value,\n        isValid: validate(action.value, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\nexport const Input: React.FC<InputProps> = ({\n  name,\n  type = \"text\",\n  inputValue,\n  onInput,\n  placeholder,\n  className,\n  style,\n  label,\n  labelClass,\n  id,\n  element,\n  row = 3,\n  errorText,\n  validators,\n  valid,\n  inputValid,\n  onChange,\n}) => {\n  let elementType;\n  const [inputState, dispatch] = React.useReducer(inputReducer, {\n    value: inputValue || \"\",\n    isValid: inputValid || false,\n    isTouched: false,\n  });\n  const changeHandler = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    dispatch({\n      type: \"CHANGE\",\n      value: event.target.value,\n      validators,\n    });\n    console.log(\"inputState\", label, type, inputState);\n  };\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n  const { value, isValid } = inputState;\n  React.useEffect(() => {\n    onInput?.(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n  if (element === \"input\") {\n    elementType = (\n      <input\n        //  name={name}\n        type={type}\n        value={inputState.value}\n        onChange={changeHandler || onChange}\n        onBlur={touchHandler}\n        placeholder={placeholder}\n        //  className={className}\n        //  style={style}\n        id={id}\n      />\n    );\n  } else if (element === \"textarea\") {\n    elementType = (\n      <textarea\n        //  name={name}\n        value={inputState.value}\n        onChange={changeHandler || onChange}\n        onBlur={touchHandler}\n        placeholder={placeholder}\n        //  className={className}\n        //  style={style}\n        id={id}\n        rows={row}\n      />\n    );\n  } else if (element === \"select\") {\n  }\n\n  return (\n    <div\n      className={`form-control \n     ${\n       !inputState.isValid && inputState.isTouched\n         ? \"form-control--invalid\"\n         : \"\"\n     }`}\n    >\n      <label htmlFor={id}>{label}</label>\n      {elementType}\n      {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\n    </div>\n  );\n};\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/utlis/validations/validator.ts",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/UpdatePlaceView.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/places/UpdatePlace.tsx",["252","253"],"import React, { useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Input } from \"../shared/UIElements/Input\";\nimport { Place } from \"./placesInterFace\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../utlis/validations/validator\";\nimport Button from \"../shared/UIElements/Button\";\nimport { useForm } from \"../../app/hooks/useForm\";\n\nimport \"../../styles/places.scss\";\nimport Card from \"../shared/UIElements/Card\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../shared/context/auth.context\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\n\nconst UpdatePlace: React.FC = () => {\n  const { placeId } = useParams();\n  const auth = useContext(AuthContext);\n  const place = auth.places.find((p) => p._id === placeId);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const navigate = useNavigate();\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: place?.title,\n        isValid: false,\n      },\n      description: {\n        value: place?.description,\n        isValid: false,\n      },\n      address: {\n        value: place?.address,\n        isValid: place ? true : false,\n      },\n      image: {\n        value: place?.image,\n        isValid: false,\n      },\n    },\n    false\n  );\n  React.useEffect(() => {\n    console.log(place);\n    if (place) {\n      setFormData(\n        {\n          title: {\n            value: place.title,\n            isValid: place ? true : false,\n          },\n          description: {\n            value: place.description,\n            isValid: place ? true : false,\n          },\n          address: {\n            value: place.address,\n            isValid: place ? true : false,\n          },\n          image: {\n            value: place?.image,\n            isValid: false,\n          },\n        },\n        true\n      );\n    }\n  }, [setFormData, place]);\n  console.log(useParams());\n  const placeSubmitHandler = async (\n    event: React.FormEvent<HTMLFormElement>\n  ) => {\n    event.preventDefault();\n    let title = formState.inputs.title.value;\n    let description = formState.inputs.description.value;\n    let imageUrl = formState.inputs.image.value;\n    let address = formState.inputs.address.value;\n    console.log(\"formState\", formState); //send this to back end\n    try {\n      let res: any = await sendRequest(\n        `http://localhost:5000/api/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({ title, description, address }),\n        {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      console.log(res);\n      navigate(`/${auth.userId}/places`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <LoadingSpinner asOverlay={true} />\n        </Card>\n      </div>\n    );\n  }\n  if (!place) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2 className=\"text-xl\">Place not found</h2>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please Enter A valid title\"\n          onInput={inputHandler}\n          inputValue={formState.inputs.title.value}\n          inputValid={formState.inputs.title.isValid}\n          valid={true}\n        />\n\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please Enter A valid description at least 5 chars\"\n          onInput={inputHandler}\n          inputValue={formState.inputs.description.value}\n          inputValid={formState.inputs.description.isValid}\n          valid={true}\n        />\n\n        <Input\n          id=\"address\"\n          element=\"textarea\"\n          label=\"Address\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please Enter A valid description at least 5 chars\"\n          onInput={inputHandler}\n          inputValue={formState.inputs.address.value}\n          inputValid={formState.inputs.address.isValid}\n          valid={true}\n        />\n\n        {/*<Input*/}\n        {/*  id=\"imageUrl\"*/}\n        {/*  element=\"textarea\"*/}\n        {/*  label=\"Image\"*/}\n        {/*  validators={[VALIDATOR_MINLENGTH(10)]}*/}\n        {/*  errorText=\"Please Enter A valid description at least 10 chars\"*/}\n        {/*  onInput={inputHandler}*/}\n        {/*  inputValue={formState.inputs.image.value}*/}\n        {/*  inputValid={formState.inputs.image.isValid}*/}\n        {/*  valid={true}*/}\n        {/*/>*/}\n\n        <Button type=\"submit\" disabled={!formState.isValid} inverse={true}>\n          Update Place\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useForm.tsx",["254"],"import React, { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state: any, action: any) => {\n  console.log(action.type, state);\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialState: any, initialFormValidity: boolean) => {\n  const [formState, dispatch] = React.useReducer(formReducer, {\n    inputs: initialState,\n    isValid: initialFormValidity,\n  });\n  const inputHandler = React.useCallback((id, value, isValid) => {\n    console.log(\"inputHandler\", id, value, isValid);\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n  const setFormData = useCallback((inputData: any, formValidity: any) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      isValid: formValidity,\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/pages/AuthView.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/user/Auth.tsx",["255","256","257"],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/context/auth.context.ts",["258"],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/LoadingSpinner.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/UIElements/ErrorModal.tsx",["259"],"import React from 'react';\nimport Modal from \"./Modal\";\nimport Button from \"./Button\";\n\ninterface Props {\n    onClear: () => void;\n    error: string;\n}\n\nconst ErrorModal:React.FC=(props:any)=>{\n    const  modalProps:any={\n        onCancel:props.onClear,\n        header:\"An Error Occurred!\",\n        show:!!props.error,\n        footer:<Button onClick={props.onClear}>Okay</Button>\n\n    }\n    return (\n        <Modal {...modalProps}>\n            <p>{props.error}</p>\n        </Modal>\n    );\n}\nexport default ErrorModal;\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useHttpClient.tsx",[],"/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/components/shared/form/ImageUpload.tsx",["260"],"import React, { useRef, useState, useEffect } from \"react\";\n\nimport \"./imageUpload.css\";\nimport Button from \"../UIElements/Button\";\ninterface Props {\n  id: string;\n  center: boolean;\n  onInput: (id: string, file: any, isValid: boolean) => void;\n  errorText: string;\n}\n\ninterface Files {\n  file: Blob | HTMLInputElement;\n}\n\nexport const ImageUpload: React.FC<Props> = ({\n  id,\n  center,\n  onInput,\n  errorText,\n}) => {\n  const filePickerRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const [file, setFile] = useState<any>();\n  const [previewUrl, setPreviewUrl] = useState<any>();\n  const [isValid, setIsValid] = useState<boolean>(false);\n  const pickImageHandler = () => {\n    filePickerRef.current?.click();\n  };\n\n  const pickedHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target);\n    let pickedFile: any;\n    let fileIsValid: boolean = isValid;\n    if (event.target.files && event.target.files?.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    console.log(id, pickedFile, fileIsValid);\n    onInput(id, pickedFile, fileIsValid);\n  };\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  return (\n    <div className={`form-control`}>\n      <input\n        type={\"file\"}\n        ref={filePickerRef}\n        id={id}\n        style={{ display: \"none\" }}\n        accept={`.jpg,.png,.jpeg`}\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${center && \"center\"}`}>\n        <div className={`image-upload__preview`}>\n          {previewUrl && <img src={previewUrl} alt={\"preview\"} />}\n          {!previewUrl && <p>Please Pick an Image</p>}\n        </div>\n        <Button type={\"button\"} onClick={pickImageHandler} inverse>\n          Pick Image\n        </Button>\n      </div>\n      {!isValid && <p>{errorText}</p>}\n    </div>\n  );\n};\n","/Volumes/SSD-Data/Users/mohamed/projects/mern/app/src/app/hooks/useAuth.tsx",["261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":8,"nodeType":"268","messageId":"269","endLine":1,"endColumn":13},{"ruleId":"266","severity":1,"message":"270","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":27},{"ruleId":"266","severity":1,"message":"271","line":12,"column":11,"nodeType":"268","messageId":"269","endLine":12,"endColumn":20},{"ruleId":"266","severity":1,"message":"272","line":19,"column":7,"nodeType":"268","messageId":"269","endLine":19,"endColumn":18},{"ruleId":"266","severity":1,"message":"273","line":20,"column":11,"nodeType":"268","messageId":"269","endLine":20,"endColumn":21},{"ruleId":"266","severity":1,"message":"274","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":30,"column":8,"nodeType":"277","endLine":30,"endColumn":10,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"279","line":19,"column":6,"nodeType":"277","endLine":19,"endColumn":8,"suggestions":"280"},{"ruleId":"275","severity":1,"message":"281","line":38,"column":6,"nodeType":"277","endLine":38,"endColumn":27,"suggestions":"282"},{"ruleId":"266","severity":1,"message":"283","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":17},{"ruleId":"266","severity":1,"message":"284","line":29,"column":9,"nodeType":"268","messageId":"269","endLine":29,"endColumn":17},{"ruleId":"266","severity":1,"message":"285","line":7,"column":10,"nodeType":"268","messageId":"269","endLine":7,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":46,"column":6,"nodeType":"277","endLine":46,"endColumn":8,"suggestions":"286"},{"ruleId":"266","severity":1,"message":"287","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":27},{"ruleId":"266","severity":1,"message":"288","line":9,"column":10,"nodeType":"268","messageId":"269","endLine":9,"endColumn":24},{"ruleId":"275","severity":1,"message":"289","line":63,"column":21,"nodeType":"268","endLine":63,"endColumn":28},{"ruleId":"262","replacedBy":"290"},{"ruleId":"264","replacedBy":"291"},{"ruleId":"266","severity":1,"message":"292","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":24},{"ruleId":"266","severity":1,"message":"293","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":15},{"ruleId":"266","severity":1,"message":"294","line":79,"column":9,"nodeType":"268","messageId":"269","endLine":79,"endColumn":17},{"ruleId":"266","severity":1,"message":"295","line":1,"column":30,"nodeType":"268","messageId":"269","endLine":1,"endColumn":40},{"ruleId":"266","severity":1,"message":"296","line":47,"column":9,"nodeType":"268","messageId":"269","endLine":47,"endColumn":13},{"ruleId":"266","severity":1,"message":"297","line":64,"column":13,"nodeType":"268","messageId":"269","endLine":64,"endColumn":25},{"ruleId":"266","severity":1,"message":"297","line":86,"column":13,"nodeType":"268","messageId":"269","endLine":86,"endColumn":25},{"ruleId":"298","severity":1,"message":"299","line":10,"column":11,"nodeType":"300","messageId":"301","endLine":10,"endColumn":22},{"ruleId":"266","severity":1,"message":"302","line":5,"column":11,"nodeType":"268","messageId":"269","endLine":5,"endColumn":16},{"ruleId":"266","severity":1,"message":"303","line":12,"column":11,"nodeType":"268","messageId":"269","endLine":12,"endColumn":16},{"ruleId":"275","severity":1,"message":"304","line":75,"column":6,"nodeType":"277","endLine":75,"endColumn":17,"suggestions":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'ReactEventHandler' is defined but never used.","'RouteType' is defined but never used.","'routes' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'className' and 'container'. Either include them or remove the dependency array.","ArrayExpression",["308"],"React Hook React.useEffect has a missing dependency: 'container'. Either include it or remove the dependency array.",["309"],"React Hook React.useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["310"],"'NavLink' is defined but never used.","'navigate' is assigned a value but never used.","'usePortal' is defined but never used.",["311"],"'createRootElement' is defined but never used.","'addRootElement' is defined but never used.","The ref value 'rootElemRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'rootElemRef.current' to a variable inside the effect, and use that variable in the cleanup function.",["306"],["307"],"'actionCreators' is defined but never used.","'Place' is defined but never used.","'imageUrl' is assigned a value but never used.","'useReducer' is defined but never used.","'data' is defined but never used.","'decoded' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as Place[]' instead of '<Place[]>'.","TSTypeAssertion","as","'Props' is defined but never used.","'Files' is defined but never used.","React Hook useEffect has missing dependencies: 'login' and 'sendRequest'. Either include them or remove the dependency array.",["312"],"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"313","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [className, container]",{"range":"322","text":"323"},"Update the dependencies array to be: [container]",{"range":"324","text":"325"},"Update the dependencies array to be: [auth.token, sendRequest, userId]",{"range":"326","text":"327"},{"range":"328","text":"323"},"Update the dependencies array to be: [login, sendRequest, setUserId]",{"range":"329","text":"330"},[807,809],"[className, container]",[449,451],"[container]",[1240,1261],"[auth.token, sendRequest, userId]",[1012,1014],[2173,2184],"[login, sendRequest, setUserId]"]