{"version":3,"file":"static/js/51.629ba4b1.chunk.js","mappings":"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","sources":["components/shared/map/Map.tsx","components/places/PlaceItem.tsx","components/places/PlaceList.tsx","components/places/UserPlaces.tsx","pages/UserPlacesView.tsx"],"sourcesContent":["import React from \"react\";\n// import {CustomMap} from './CustomMap';\nimport \"./map.scss\";\n\ninterface MapProps {\n  className?: string;\n  style?: object;\n  coordinates?: {\n    lat: string;\n    lng: string;\n  };\n}\n\nexport const Map: React.FC<MapProps> = ({ className, style, coordinates }) => {\n  React.useEffect(() => {\n    //   let map=document.getElementById('map')\n    //  if(map!=null){\n    //    const mapElement:HTMLElement=map;\n    //    let googleMap=new window.google.maps.Map(mapElement,{\n    //      zoom:1,\n    //      center:{lat:0,lng:0}\n    //    })\n    //    const customMap= new window.google.maps.Marker({\n    //      map:googleMap,\n    //      position:{\n    //        lat:coordinates.lat,\n    //        lng:coordinates.lng\n    //      }\n    //    })\n    //    //inject the map into the div\n    //    mapElement.appendChild(googleMap)\n    //   //  mapElement.innerHTML=customMap;\n    //  }\n  }, []);\n  return (\n    <div className={`map ${className}`} id=\"map\" style={style}>\n      {/* <img \n      src={`https://media.wired.com/photos/59269cd37034dc5f91bec0f1/master/pass/GoogleMapTA.jpg`}alt=\"map\" />\n       */}\n      <iframe\n        src={`https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3966.521260322283!2d106.8195613507864!3d-6.194741395493371!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x2e69f5390917b759%3A0x6b45e67356080477!2sPT%20Kulkul%20Teknologi%20Internasional!5e0!3m2!1sen!2sid!4v1601138221085!5m2!1sen!2sid`}\n        // width=\"600\"\n        // height=\"600\"\n        frameBorder=\"0\"\n        style={{ border: 0, width: \"100%\", height: \"30rem\" }}\n        allowFullScreen={false}\n        aria-hidden=\"false\"\n        tabIndex={0}\n        title=\"map\"\n      />\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Card from \"../shared/UIElements/Card\";\nimport { Place } from \"./placesInterFace\";\nimport Button from \"../shared/UIElements/Button\";\nimport Modal from \"../shared/UIElements/Modal\";\nimport { Map } from \"../shared/map/Map\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../shared/context/auth.context\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\nimport { basURLImage } from \"../../utlis/api\";\n\nimport \"../../styles/places.scss\";\n\ninterface PlaceItemProps extends Place {\n  onDelete: (deletedID?: string) => void;\n}\n\nconst PlaceItem: React.FC<PlaceItemProps> = ({\n  id,\n  image,\n  title,\n  description,\n  address,\n  creator,\n  coordinates,\n  onDelete,\n}) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const navigate = useNavigate();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = React.useState(false);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n  const openConfirmHandler = () => setShowConfirm(true);\n  const closeConfirmHandler = () => setShowConfirm(false);\n  const confirmDeleteHandler = async () => {\n    console.log(\"Deleting...\");\n    await deletePlace();\n    closeConfirmHandler();\n  };\n  const dataMapProps: any = {\n    show: showMap,\n    onCancel: closeMapHandler,\n    header: address,\n    contentClass: \"place-item__modal-content\",\n    footerClass: \"place-item__modal-actions\",\n    footer: <Button onClick={closeMapHandler}>CLOSE</Button>,\n  };\n  const dataDeleteProps: any = {\n    show: showConfirm,\n    onCancel: closeConfirmHandler,\n    header: \"Are you sure\",\n    contentClass: \"place-item__modal-content\",\n    footerClass: \"place-item__modal-actions\",\n    footer: (\n      <>\n        <Button onClick={closeConfirmHandler} inverse>\n          CANCEL\n        </Button>\n        <Button danger onClick={confirmDeleteHandler}>\n          DELETE\n        </Button>\n      </>\n    ),\n  };\n  const deletePlace = async () => {\n    try {\n      let res: any = await sendRequest(`places/${id}`, \"DELETE\", null, {\n        Authorization: `Bearer ${auth.token}`,\n      });\n      console.log(res);\n      onDelete(id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  console.log(auth.userId, id, creator);\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      <Modal {...dataMapProps}>\n        <div className=\"map-container\">\n          <Map coordinates={coordinates} />\n        </div>\n      </Modal>\n      <Modal {...dataDeleteProps}>\n        <p>do you want to delete this place?</p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay={true} />}\n          <div className=\"place-item__image\">\n            <img src={`${basURLImage}${image}`} alt={title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{title}</h2>\n            <h3>{address}</h3>\n            <p>{description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse={true} onClick={openMapHandler}>\n              view on map\n            </Button>\n            {auth.userId === creator && (\n              <Button to={`/places/${id}`}> EDIT </Button>\n            )}\n            {auth.userId === creator && (\n              <Button danger={true} onClick={openConfirmHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\nimport Card from \"../shared/UIElements/Card\";\nimport { NavLink } from \"react-router-dom\";\nimport PlaceItem from \"./PlaceItem\";\nimport { Place } from \"./placesInterFace\";\n\nimport \"../../styles/places.scss\";\nimport Button from \"../shared/UIElements/Button\";\n\ninterface PlaceItemProps {\n  places: Place[];\n  onDeletePlace: (deleteID?: string) => void;\n}\n\nconst PlaceList: React.FC<PlaceItemProps> = ({ places, onDeletePlace }) => {\n  if (places.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card className=\"w-100 h-48 d-flex justify-center items-center\">\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"place-list\">\n      {React.Children.toArray(\n        places.map((place: Place) => (\n          <PlaceItem\n            id={place._id}\n            image={place.image}\n            title={place.title}\n            description={place.description}\n            address={place.address}\n            creator={place.creator}\n            coordinates={place.coordinates}\n            onDelete={onDeletePlace}\n          />\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useContext } from \"react\";\nimport PlaceList from \"./PlaceList\";\nimport { Place } from \"./placesInterFace\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../app/hooks/useHttpClient\";\nimport LoadingSpinner from \"../shared/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../shared/UIElements/ErrorModal\";\nimport { AuthContext } from \"../shared/context/auth.context\";\n\nimport \"../../styles/places.scss\";\nconst UserPlaces: React.FC = () => {\n  let { userId } = useParams();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [places, setPlaces] = React.useState<Place[]>([]);\n  const auth = useContext(AuthContext);\n  React.useEffect(() => {\n    (async () => {\n      try {\n        let res: any = await sendRequest(`places/user/${userId}`, \"GET\", null, {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth.token}`,\n        });\n        setPlaces(res.data.places);\n        console.log(res);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [sendRequest, userId]);\n  const onDeletePlaceHandler = (deletedID?: string) => {\n    setPlaces((prevPlace) =>\n      prevPlace.filter((place) => place._id !== deletedID)\n    );\n  };\n  const modalProps: any = {\n    error,\n    onClear: clearError,\n  };\n  return (\n    <>\n      <ErrorModal {...modalProps} />\n      {isLoading && <LoadingSpinner asOverlay={true} />}\n      {places && (\n        <PlaceList places={places} onDeletePlace={onDeletePlaceHandler} />\n      )}\n    </>\n  );\n};\n\nexport default UserPlaces;\n","import React from \"react\";\nimport Layout from '../components/layouts/Layout';\nimport UserPlaces from \"../components/places/UserPlaces\";\n\n\nconst UserPlacesView:React.FC=()=>{\n    return(\n       <Layout>\n            <UserPlaces/>\n       </Layout>\n    )\n}\n\nexport default UserPlacesView;"],"names":["Map","className","style","coordinates","React","id","src","frameBorder","border","width","height","allowFullScreen","tabIndex","title","image","description","address","creator","onDelete","useHttpClient","isLoading","error","sendRequest","clearError","auth","useNavigate","useContext","AuthContext","showMap","setShowMap","showConfirm","setShowConfirm","closeMapHandler","closeConfirmHandler","confirmDeleteHandler","console","log","deletePlace","dataMapProps","show","onCancel","header","contentClass","footerClass","footer","Button","onClick","dataDeleteProps","inverse","danger","Authorization","token","res","modalProps","onClear","userId","ErrorModal","Modal","Card","LoadingSpinner","asOverlay","basURLImage","alt","to","places","onDeletePlace","length","map","place","_id","useParams","setPlaces","Accept","data","deletedID","prevPlace","filter","Layout"],"sourceRoot":""}